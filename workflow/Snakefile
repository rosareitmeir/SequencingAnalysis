#Applied Sequence Analysis
#Exercise 2

#workflow is the current folder where the user executes snakemake
#workflow/Snakefile is the location of Snakefile
#Results will be written in folders in workflow/results

#Execution:
#snakemake --cores INT or snakemake --cores INT Snakefile

#load samples into table
import pandas as pd
#relative to where Snakefile is
configfile: "../config/config.yaml"
samples = pd.read_csv(config["samples"], index_col="sample", sep='\t')

def get_fastq_pair1(wildcards):
	sample = wildcards.sample
	r1 = samples.loc[sample][0]
	return r1

def get_fastq_pair2(wildcards):
	sample = wildcards.sample
	r2 = samples.loc[sample][1]
	return r2

include: "rules/bowtie.smk" #index reference and map fastq files
include: "rules/samtools.smk" #sam to bam, sort, index and stats

rule all:
	input:
		expand("../results/stats/{sample}.stats_aug", sample=list(samples.index))

rule avg_cov:
	input:
		"../results/stats/{sample}.stats",
		# Detect any changes to python script to run workflow again
		"scripts/avg_cov.py"
	output:
		"../results/stats/{sample}.stats_aug"
	script:
		"scripts/avg_cov.py"